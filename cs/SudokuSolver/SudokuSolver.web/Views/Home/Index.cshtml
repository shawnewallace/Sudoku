@model SudokuSolver.web.Models.BoardUIModel

<span>
  Enter a board into the text box or directly into the Board.
</span>

@using (Html.BeginForm("Board", "Home", FormMethod.Post))
{
  <div>
    <input class="boardInput" type="text" id="input" name="input" maxlength="81" />
    <input type="submit" id="fill_board" value="Fill" />
    @Html.ActionLink("Clear", "Index")
  </div>
}

@using (Html.BeginForm("Solve", "Home", FormMethod.Post))
{
  <table class="board">

    @foreach (var i in "ABCDEFGHI")
    {
      <tr class="boardRow">
        @foreach (var j in "123456789")
        {
          var cell = string.Format("{0}{1}", i, j);
          var value = Model.ContainsKey(cell) ? Model[cell] : "";
          <td class="boardCell unit-@Model.WhichUnit(cell)">
            <input type="text"
                   class="unit-@Model.WhichUnit(cell) boardEntry"
                   id="values"
                   name="values"
                   maxlength="1"
                   value="@value" />
          </td>
        }
      </tr>
    }

  </table>

  <input type="submit" value="Solve" />
}

<div>
  <div>Samples and Previous Input (Double-Click to use)</div>
  <select id="old_input" size="20">
    @foreach (var input in Model.OriginalInput)
    {
      <option>@input</option>
    }
  </select>
</div>

@section scripts{
  <script type="text/javascript">
    $(document).ready(function() {
      $("#old_input").dblclick(function () {
        var selected = $(this).find(":selected").text();
        $("#input").val(selected);
        $("#fill_board").trigger("click");
      });
    });
  </script>
}